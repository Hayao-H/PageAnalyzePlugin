var p=class{get canUse(){return application.output!==null}write(e){!this.canUse||application.output.write(e)}};var d=class{constructor(){this.RecipeId="";this.ContentId="";this.HeartbeatLifetime=0;this.Token="";this.Signature="";this.AuthType="";this.ContentKeyTimeout=0;this.ServiceUserId="";this.PlayerId="";this.TransferPriset="";this.Priority=0;this.Videos=[""];this.Audios=[""]}};var m=class{constructor(e){this.large=null;this.middle=null;this.normal=null;this.player=null;this.large=e.largeUrl,this.middle=e.middleUrl,this.normal=e.url,this.player=e.player}},u=class{constructor(){this.url="";this.middleUrl="";this.largeUrl="";this.player="";this.ogp=""}};var c=class{constructor(){this.Title="";this.Id="";this.Owner="";this.OwnerID=0;this.Userkey="";this.UserId="";this.ChannelID="";this.ChannelName="";this.Description="";this.ViewCount=0;this.CommentCount=0;this.MylistCount=0;this.LikeCount=0;this.Duration=0;this.Tags=[];this.IsDownloadable=!1;this.IsEncrypted=!1;this.IsOfficial=!1;this.UploadedOn=new Date;this.DownloadStartedOn=new Date;this.SessionInfo=new d;this.CommentThreads=[];this.ThumbInfo=new m(new u)}};var f=class{constructor(){this.ID=0;this.Fork=0;this.IsActive=!1;this.IsDefaultPostTarget=!1;this.IsEasyCommentPostTarget=!1;this.IsLeafRequired=!1;this.IsOwnerThread=!1;this.IsThreadkeyRequired=!1;this.Threadkey=null;this.Is184Forced=!1;this.HasNicoscript=!1;this.Label="";this.PostkeyStatus=0;this.Server=""}};var n=class{constructor(e,t,s=null,r=null){this.isSucceeded=!1;this.message="";this.exception=null;this.data=null;this.isSucceeded=e,this.message=t,this.data=s,this.exception=r}};var h=class{convert(e){let t;try{t=this.convertInternal(e)}catch(s){return new n(!1,"\u8996\u8074\u30DA\u30FC\u30B8\u306E\u89E3\u6790\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002",null,s)}return new n(!0,"",t)}convertInternal(e){let t=new c;if(t.Title=e.video?.title??"",t.Id=e.video?.id??"",e.video!==null&&(e.video.registeredAt instanceof Date?t.UploadedOn=e.video.registeredAt:t.UploadedOn=new Date(Date.parse(e.video.registeredAt)),t.ThumbInfo=new m(e.video.thumbnail)),t.Owner=e.owner?.nickname??"",t.OwnerID=e.owner?.id??0,t.Tags=e.tag.items?.map(s=>s.name??"").filter(s=>s)??[],t.ViewCount=e.video?.count.view??0,t.CommentCount=e.video?.count.comment??0,t.MylistCount=e.video?.count.mylist??0,t.LikeCount=e.video?.count.like??0,e.comment!==null){t.CommentThreads=[];for(let s of e.comment.threads){let r=new f;r.ID=s.id,r.Fork=s.fork,r.IsActive=s.isActive,r.IsDefaultPostTarget=s.isDefaultPostTarget,r.IsEasyCommentPostTarget=s.isEasyCommentPostTarget,r.IsLeafRequired=s.isLeafRequired,r.IsOwnerThread=s.isOwnerThread,r.IsThreadkeyRequired=s.isThreadkeyRequired,r.Threadkey=s.threadkey,r.Is184Forced=s.is184Forced,r.Label=s.label,t.CommentThreads.push(r)}}return t.UserId=String(e.viewer.id),t.Userkey=e.comment?.keys.userKey??"",t.IsOfficial=e.channel!==null,t.Duration=e.video?.duration??0,t.ChannelID=e.channel?.id??"",t.ChannelName=e.channel?.name??"",t.Description=e.video?.description??"",t.Description=t.Description.replace(/<\/?.+? \/?>/g,""),t.ChannelID=e.channel?.id??"",t.ChannelName=e.channel?.name??"",e.media!==null&&e.media.delivery!==null?(t.SessionInfo.Audios.splice(0),t.SessionInfo.Videos.splice(0),t.SessionInfo.RecipeId=e.media.delivery.recipeId,t.SessionInfo.ContentId=e.media.delivery.movie?.contentId,t.SessionInfo.HeartbeatLifetime=e.media.delivery.movie?.session?.heartbeatLifetime??0,t.SessionInfo.Token=e.media?.delivery.movie?.session?.token??"",t.SessionInfo.Signature=e.media?.delivery.movie?.session?.signature,t.SessionInfo.AuthType=e.media?.delivery.movie?.session?.authTypes?.http,t.SessionInfo.ContentKeyTimeout=e.media?.delivery.movie?.session?.contentKeyTimeout??0,t.SessionInfo.PlayerId=e.media?.delivery.movie?.session?.playerId,t.SessionInfo.Priority=Math.floor((e.media?.delivery.movie?.session?.priority??1)*10)/10,t.SessionInfo.Videos.push(...e.media.delivery.movie?.session?.videos),t.SessionInfo.Audios.push(...e.media.delivery.movie?.session?.audios),t.SessionInfo.ServiceUserId=e.media?.delivery.movie?.session?.serviceUserId,t.SessionInfo.TransferPriset=e.media?.delivery.movie?.session?.transferPresets[0]??"",t.IsDownloadable=e.media?.delivery.encryption===null):t.IsDownloadable=!1,e.media?.delivery?.encryption!==null&&(t.IsDownloadable=!1,t.IsEncrypted=!0),t}};var y=class{parse(e){let t;try{t=parseHtml(e)}catch(s){return new n(!1,"\u30DA\u30FC\u30B8\u306E\u89E3\u6790\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002",null,s)}return new n(!0,"",t)}};var I=class{getApiData(e){let t;try{t=e.QuerySelector("#js-initial-watch-data")?.GetAttribute("data-api-data")??""}catch(a){return new n(!1,"\u30DA\u30FC\u30B8\u306E\u89E3\u6790\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002",null,a)}let s;function r(a,i){return typeof i=="string"&&i.match(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d{3})?\+\d{2}:\d{2}$/)?new Date(Date.parse(i)):i}try{s=JSON.parse(t,r)}catch(a){return new n(!1,"Json\u306E\u89E3\u6790\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002",null,a)}return new n(!0,"",s)}};var D=class{constructor(e,t){this.htmlParser=e,this.jsonParser=t}parseDocument(e){let t=this.htmlParser.parse(e);return!t.isSucceeded||t.data===null?new n(!1,t.message,null,t.exception):this.jsonParser.getApiData(t.data)}};var v=class{error(e){if(!this.canUse)throw new Error;application.log?.error(e)}get canUse(){return application.log!==null}};b();async function b(){let o=new p,e=new v;o.canUse&&(application.hooks?.registerPageAnalyzeFunction(t=>{let s=new D(new y,new I),r=new h,a=s.parseDocument(t);if(!a.isSucceeded||a.data===null){let l=`\u8996\u8074\u30DA\u30FC\u30B8\u306E\u89E3\u6790\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002(\u8A73\u7D30:${a.message}, \u4F8B\u5916:${a.exception?.message})`;throw o.write(l),e.error(l),new Error}let i=r.convert(a.data);if(!i.isSucceeded||i.data===null){let l=`\u8996\u8074\u30DA\u30FC\u30B8\u306E\u89E3\u6790\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002(\u8A73\u7D30:${i.message}, \u4F8B\u5916:${i.exception?.message})`;throw o.write(l),e.error(l),new Error}return i.data}),o.write("\u30DA\u30FC\u30B8\u89E3\u6790\u6A5F\u80FD\u306E\u521D\u671F\u5316\u304C\u5B8C\u4E86\u3057\u307E\u3057\u305F\u3002"))}
//# sourceMappingURL=data:application/json;base64,
